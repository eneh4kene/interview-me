config:
  target: 'http://localhost:3001'
  phases:
    # Warm-up phase
    - duration: 30
      arrivalRate: 5
      name: "Warm up"
    # Ramp up phase
    - duration: 60
      arrivalRate: 10
      rampTo: 50
      name: "Ramp up load"
    # Sustained load phase
    - duration: 120
      arrivalRate: 50
      name: "Sustained load"
    # Peak load phase
    - duration: 60
      arrivalRate: 100
      name: "Peak load"
    # Cool down phase
    - duration: 30
      arrivalRate: 10
      name: "Cool down"
  defaults:
    headers:
      Content-Type: 'application/json'
      User-Agent: 'InterviewsFirst-LoadTest/1.0'

scenarios:
  # Health check scenario
  - name: "Health Check"
    weight: 20
    flow:
      - get:
          url: "/health"
          expect:
            - statusCode: 200
            - hasHeader: "x-request-id"
      - get:
          url: "/health/detailed"
          expect:
            - statusCode: 200
            - hasHeader: "x-request-id"

  # Authentication scenario
  - name: "Authentication Flow"
    weight: 30
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "admin@interviewsfirst.com"
            password: "admin123"
          expect:
            - statusCode: 200
            - hasProperty: "data.accessToken"
      - think: 2
      - post:
          url: "/api/auth/refresh"
          json:
            refreshToken: "{{ accessToken }}"
          expect:
            - statusCode: 200

  # API endpoints scenario
  - name: "API Endpoints"
    weight: 25
    flow:
      - get:
          url: "/api/clients"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          expect:
            - statusCode: 200
            - hasProperty: "data"
      - think: 1
      - get:
          url: "/api/interviews"
          headers:
            Authorization: "Bearer {{ accessToken }}"
          expect:
            - statusCode: 200
      - think: 1
      - get:
          url: "/metrics"
          expect:
            - statusCode: 200

  # Error handling scenario
  - name: "Error Handling"
    weight: 15
    flow:
      - get:
          url: "/api/nonexistent"
          expect:
            - statusCode: 404
      - post:
          url: "/api/auth/login"
          json:
            email: "invalid@email.com"
            password: "wrongpassword"
          expect:
            - statusCode: 401
      - get:
          url: "/api/clients"
          expect:
            - statusCode: 401

  # Performance monitoring scenario
  - name: "Performance Monitoring"
    weight: 10
    flow:
      - get:
          url: "/metrics"
          expect:
            - statusCode: 200
            - hasProperty: "metrics"
      - get:
          url: "/health/ready"
          expect:
            - statusCode: 200
      - get:
          url: "/health/live"
          expect:
            - statusCode: 200
